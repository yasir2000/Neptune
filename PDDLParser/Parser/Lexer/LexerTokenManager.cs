/* Generated By:JJTree&CSCC: Do not edit this line. LexerTokenManager.cs */

//#warning Warnings disabled!!
#pragma warning disable 0164 // Label not referenced
#pragma warning disable 0168 // Variable declared but never used

namespace PDDLParser.Parser.Lexer
{
using System;
using System.Text;

public class LexerTokenManager : LexerConstants
{
  public  System.IO.TextWriter debugStream = new System.IO.StreamWriter(System.Console.OpenStandardError());
  public  void setDebugStream(System.IO.TextWriter ds) { debugStream = ds; }
private int jjStopStringLiteralDfa_0(int pos, long active0, long active1, long active2)
{
   switch (pos)
   {
      case 0:
         if ((active0 & unchecked((long)0x120L)) != 0L || (active1 & unchecked((long)0x400L)) != 0L)
            return 2;
         if ((active0 & unchecked((long)0x140c0898000L)) != 0L || (active1 & unchecked((long)0xffffffffffffe000L)) != 0L || (active2 & unchecked((long)0xe1dL)) != 0L)
         {
            jjmatchedKind = 140;
            return 9;
         }
         if ((active1 & unchecked((long)0x1000L)) != 0L)
            return 10;
         return -1;
      case 1:
         if ((active0 & unchecked((long)0x100L)) != 0L)
            return 0;
         if ((active0 & unchecked((long)0x140c0898000L)) != 0L || (active1 & unchecked((long)0xffdfefffbfffe000L)) != 0L || (active2 & unchecked((long)0xe19L)) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 140;
               jjmatchedPos = 1;
            }
            return 9;
         }
         if ((active1 & unchecked((long)0x20100040000000L)) != 0L || (active2 & unchecked((long)0x4L)) != 0L)
            return 9;
         return -1;
      case 2:
         if ((active0 & unchecked((long)0x140c0898000L)) != 0L || (active1 & unchecked((long)0xe55ffff73fa20000L)) != 0L || (active2 & unchecked((long)0xe19L)) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 140;
               jjmatchedPos = 2;
            }
            return 9;
         }
         if ((active1 & unchecked((long)0x1a800008805de000L)) != 0L)
            return 9;
         return -1;
      case 3:
         if ((active0 & unchecked((long)0x14040898000L)) != 0L || (active1 & unchecked((long)0xfc4fff763ea00000L)) != 0L || (active2 & unchecked((long)0xe01L)) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 3;
            return 9;
         }
         if ((active0 & unchecked((long)0x80000000L)) != 0L || (active1 & unchecked((long)0x110008001030000L)) != 0L || (active2 & unchecked((long)0x10L)) != 0L)
            return 9;
         return -1;
      case 4:
         if ((active0 & unchecked((long)0x14040898000L)) != 0L || (active1 & unchecked((long)0xfc0bff743e000000L)) != 0L || (active2 & unchecked((long)0xe01L)) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 4;
            return 9;
         }
         if ((active1 & unchecked((long)0x44000200a00000L)) != 0L)
            return 9;
         return -1;
      case 5:
         if ((active0 & unchecked((long)0x14040800000L)) != 0L || (active1 & unchecked((long)0xfc0b76043c000000L)) != 0L || (active2 & unchecked((long)0x801L)) != 0L)
         {
            if (jjmatchedPos != 5)
            {
               jjmatchedKind = 140;
               jjmatchedPos = 5;
            }
            return 9;
         }
         if ((active0 & unchecked((long)0x98000L)) != 0L || (active1 & unchecked((long)0x897002000000L)) != 0L || (active2 & unchecked((long)0x600L)) != 0L)
            return 9;
         return -1;
      case 6:
         if ((active0 & unchecked((long)0x4040800000L)) != 0L || (active1 & unchecked((long)0xfc0bf6043c000000L)) != 0L || (active2 & unchecked((long)0x800L)) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 6;
            return 9;
         }
         if ((active0 & unchecked((long)0x10000000000L)) != 0L || (active2 & unchecked((long)0x1L)) != 0L)
            return 9;
         return -1;
      case 7:
         if ((active1 & unchecked((long)0x5800620034000000L)) != 0L)
            return 9;
         if ((active0 & unchecked((long)0x4040800000L)) != 0L || (active1 & unchecked((long)0xa40b940408000000L)) != 0L || (active2 & unchecked((long)0x800L)) != 0L)
         {
            if (jjmatchedPos != 7)
            {
               jjmatchedKind = 140;
               jjmatchedPos = 7;
            }
            return 9;
         }
         return -1;
      case 8:
         if ((active0 & unchecked((long)0x4040800000L)) != 0L || (active1 & unchecked((long)0xa40bf40408000000L)) != 0L)
         {
            if (jjmatchedPos != 8)
            {
               jjmatchedKind = 140;
               jjmatchedPos = 8;
            }
            return 9;
         }
         if ((active2 & unchecked((long)0x800L)) != 0L)
            return 9;
         return -1;
      case 9:
         if ((active0 & unchecked((long)0x800000L)) != 0L || (active1 & unchecked((long)0xa001f00400000000L)) != 0L)
         {
            if (jjmatchedPos != 9)
            {
               jjmatchedKind = 140;
               jjmatchedPos = 9;
            }
            return 9;
         }
         if ((active0 & unchecked((long)0x4040000000L)) != 0L || (active1 & unchecked((long)0x40a040008000000L)) != 0L)
            return 9;
         return -1;
      case 10:
         if ((active0 & unchecked((long)0x800000L)) != 0L || (active1 & unchecked((long)0x8000f00400000000L)) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 10;
            return 9;
         }
         if ((active1 & unchecked((long)0x2001000000000000L)) != 0L)
            return 9;
         return -1;
      case 11:
         if ((active0 & unchecked((long)0x800000L)) != 0L || (active1 & unchecked((long)0xe00000000000L)) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 11;
            return 9;
         }
         if ((active1 & unchecked((long)0x8000100400000000L)) != 0L)
            return 9;
         return -1;
      case 12:
         if ((active0 & unchecked((long)0x800000L)) != 0L || (active1 & unchecked((long)0x600000000000L)) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 12;
            return 9;
         }
         if ((active1 & unchecked((long)0x800000000000L)) != 0L)
            return 9;
         return -1;
      case 13:
         if ((active0 & unchecked((long)0x800000L)) != 0L || (active1 & unchecked((long)0x400000000000L)) != 0L)
         {
            jjmatchedKind = 140;
            jjmatchedPos = 13;
            return 9;
         }
         if ((active1 & unchecked((long)0x200000000000L)) != 0L)
            return 9;
         return -1;
      case 14:
         if ((active0 & unchecked((long)0x800000L)) != 0L || (active1 & unchecked((long)0x400000000000L)) != 0L)
            return 9;
         return -1;
      default :
         return -1;
   }
}
private int jjStartNfa_0(int pos, long active0, long active1, long active2)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1, active2), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private int jjMoveStringLiteralDfa0_0()
{
   switch((int)curChar)
   {
      case 35:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x800000L), unchecked((long)0x0L), unchecked((long)0x4L));
      case 40:
         return jjStopAtPos(0, 13);
      case 41:
         return jjStopAtPos(0, 14);
      case 42:
         return jjStopAtPos(0, 73);
      case 43:
         return jjStopAtPos(0, 75);
      case 44:
         return jjStopAtPos(0, 136);
      case 45:
         return jjStartNfaWithStates_0(0, 76, 10);
      case 47:
         jjmatchedKind = 74;
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x120L), unchecked((long)0x0L), unchecked((long)0x0L));
      case 58:
         jjmatchedKind = 135;
         return jjMoveStringLiteralDfa1_0(unchecked((long)0xfffffebf3f760000L), unchecked((long)0x7L), unchecked((long)0x0L));
      case 59:
         return jjStopAtPos(0, 6);
      case 60:
         jjmatchedKind = 68;
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x40L), unchecked((long)0x0L));
      case 61:
         return jjStopAtPos(0, 71);
      case 62:
         jjmatchedKind = 67;
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x20L), unchecked((long)0x0L));
      case 63:
         jjmatchedKind = 143;
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x0L), unchecked((long)0x2L));
      case 91:
         return jjStopAtPos(0, 133);
      case 93:
         return jjStopAtPos(0, 134);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x220910082040000L), unchecked((long)0x0L));
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x1000000L), unchecked((long)0x0L));
      case 68:
      case 100:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x18000L), unchecked((long)0x20000000L), unchecked((long)0x0L));
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x80000L), unchecked((long)0x80046000110000L), unchecked((long)0x0L));
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x1000800000L), unchecked((long)0x0L));
      case 71:
      case 103:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x8000000000L), unchecked((long)0x0L));
      case 72:
      case 104:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x3000000000000L), unchecked((long)0x0L));
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x2000000610400000L), unchecked((long)0x18L));
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x4000000000L), unchecked((long)0x80000L), unchecked((long)0x0L));
      case 77:
      case 109:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x180000000000e000L), unchecked((long)0x0L));
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x10000800000000L), unchecked((long)0x200L));
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x100000040000000L), unchecked((long)0x400L));
      case 80:
      case 112:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x10040000000L), unchecked((long)0x0L), unchecked((long)0x0L));
      case 82:
      case 114:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x200000L), unchecked((long)0x0L));
      case 83:
      case 115:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x4062000c020000L), unchecked((long)0x0L));
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0xc400000000000000L), unchecked((long)0x1L));
      case 85:
      case 117:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x4000000000000L), unchecked((long)0x800L));
      case 87:
      case 119:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x80000000L), unchecked((long)0x8080000000000L), unchecked((long)0x0L));
      case 88:
      case 120:
         return jjMoveStringLiteralDfa1_0(unchecked((long)0x0L), unchecked((long)0x100000000L), unchecked((long)0x0L));
      default :
         return jjMoveNfa_0(3, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1, long active2)
{
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1, active2);
      return 1;
   }
   switch((int)curChar)
   {
      case 42:
         if ((active0 & unchecked((long)0x100L)) != 0L)
            return jjStartNfaWithStates_0(1, 8, 0);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, unchecked((long)0xc000000000000000L), active2, unchecked((long)0x1L));
      case 47:
         if ((active0 & unchecked((long)0x20L)) != 0L)
            return jjStopAtPos(1, 5);
         break;
      case 61:
         if ((active0 & unchecked((long)0x8000000000L)) != 0L)
            return jjStopAtPos(1, 39);
         else if ((active1 & unchecked((long)0x20L)) != 0L)
            return jjStopAtPos(1, 69);
         else if ((active1 & unchecked((long)0x40L)) != 0L)
            return jjStopAtPos(1, 70);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x400000002000000L), active1, unchecked((long)0x800000000004000L), active2, 0L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, unchecked((long)0x40000L), active2, unchecked((long)0x400L));
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x8040000400100000L), active1, unchecked((long)0xc000001L), active2, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x1802023b01000000L), active1, unchecked((long)0x2L), active2, unchecked((long)0x2L));
      case 69:
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0xc000020008000L), active1, unchecked((long)0x18000021000000L), active2, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x200000000400000L), active1, unchecked((long)0x400000000L), active2, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x100000000000L), active1, 0L, active2, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x80000000L), active1, 0L, active2, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x80000080000L), active1, unchecked((long)0x1000080000008000L), active2, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, unchecked((long)0x200810000800000L), active2, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x200000000000L), active1, unchecked((long)0x200000000L), active2, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x81000000800000L), active1, unchecked((long)0x84000090400000L), active2, unchecked((long)0x818L));
      case 79:
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x100044000010000L), active1, unchecked((long)0x403629900282000L), active2, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x400000001c200000L), active1, 0L, active2, 0L);
      case 81:
      case 113:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x20000000000000L), active1, unchecked((long)0x20000L), active2, 0L);
      case 82:
      case 114:
         if ((active1 & unchecked((long)0x40000000L)) != 0L)
            return jjStartNfaWithStates_0(1, 94, 9);
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x10040020000L), active1, 0L, active2, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x400000000000L), active1, unchecked((long)0x2000000002000000L), active2, 0L);
      case 84:
      case 116:
         if ((active1 & unchecked((long)0x20000000000000L)) != 0L)
         {
            jjmatchedKind = 117;
            jjmatchedPos = 1;
         }
         else if ((active2 & unchecked((long)0x4L)) != 0L)
            return jjStartNfaWithStates_0(1, 130, 9);
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x2000800000040000L), active1, unchecked((long)0x40100000000004L), active2, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, unchecked((long)0x10000000000000L), active1, 0L, active2, unchecked((long)0x200L));
      case 86:
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, unchecked((long)0x100040000000000L), active2, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, unchecked((long)0x6000110000L), active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1, active2);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(0, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1, active2);
      return 2;
   }
   switch((int)curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, unchecked((long)0x2000100400000000L), active2, 0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x8000000L), active1, unchecked((long)0x404800800c000000L), active2, 0L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x100040000000000L), active1, 0L, active2, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x4002000000L), active1, unchecked((long)0x30000000L), active2, 0L);
      case 68:
      case 100:
         if ((active1 & unchecked((long)0x2000L)) != 0L)
            return jjStartNfaWithStates_0(2, 77, 9);
         else if ((active1 & unchecked((long)0x80000000L)) != 0L)
            return jjStartNfaWithStates_0(2, 95, 9);
         else if ((active1 & unchecked((long)0x80000000000000L)) != 0L)
            return jjStartNfaWithStates_0(2, 119, 9);
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x400000000000000L), active1, 0L, active2, unchecked((long)0x800L));
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x10012038c1020000L), active1, unchecked((long)0x8100040000000000L), active2, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x20008000L), active1, 0L, active2, unchecked((long)0x18L));
      case 71:
      case 103:
         if ((active1 & unchecked((long)0x80000L)) != 0L)
            return jjStartNfaWithStates_0(2, 83, 9);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x2002000000000000L), active1, unchecked((long)0x6001000000L), active2, 0L);
      case 74:
      case 106:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0L, active2, unchecked((long)0x400L));
      case 76:
      case 108:
         if ((active1 & unchecked((long)0x200000000000000L)) != 0L)
            return jjStartNfaWithStates_0(2, 121, 9);
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x200000000000000L), active1, unchecked((long)0x3000000000004L), active2, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x10000L), active1, unchecked((long)0x620000000000L), active2, unchecked((long)0x200L));
      case 78:
      case 110:
         if ((active1 & unchecked((long)0x8000L)) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x10080000000000L), active1, unchecked((long)0x1000000000000000L), active2, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x8040130400900000L), active1, unchecked((long)0x800001L), active2, 0L);
      case 80:
      case 112:
         if ((active1 & unchecked((long)0x100000L)) != 0L)
         {
            jjmatchedKind = 84;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, unchecked((long)0x200010000L), active2, 0L);
      case 81:
      case 113:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x4000000000000L), active1, 0L, active2, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x4000000014200000L), active1, unchecked((long)0x1100020000L), active2, 0L);
      case 83:
      case 115:
         if ((active1 & unchecked((long)0x40000L)) != 0L)
            return jjStartNfaWithStates_0(2, 82, 9);
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, unchecked((long)0x2000000L), active2, 0L);
      case 84:
      case 116:
         if ((active1 & unchecked((long)0x400000L)) != 0L)
            return jjStartNfaWithStates_0(2, 86, 9);
         else if ((active1 & unchecked((long)0x800000000L)) != 0L)
            return jjStartNfaWithStates_0(2, 99, 9);
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x400000080000L), active1, unchecked((long)0x404080000000000L), active2, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x8a0000300400000L), active1, unchecked((long)0x200002L), active2, unchecked((long)0x3L));
      case 87:
      case 119:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, unchecked((long)0x810000000000L), active2, 0L);
      case 88:
      case 120:
         if ((active1 & unchecked((long)0x4000L)) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x8000000000000L), active1, unchecked((long)0x810000000000000L), active2, 0L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa3_0(active0, unchecked((long)0x800000040000L), active1, 0L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1, active2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(1, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1, active2);
      return 3;
   }
   switch((int)curChar)
   {
      case 33:
         if ((active1 & unchecked((long)0x100000000L)) != 0L)
            return jjStopAtPos(3, 96);
         break;
      case 43:
         if ((active2 & unchecked((long)0x8L)) != 0L)
            return jjStopAtPos(3, 131);
         break;
      case 45:
         if ((active2 & unchecked((long)0x10L)) != 0L)
            return jjStartNfaWithStates_0(3, 132, 9);
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x800000L), active1, 0L, active2, 0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x20104000010000L), active1, unchecked((long)0x400811000000000L), active2, 0L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x10000000000L), active1, 0L, active2, unchecked((long)0x200L));
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x1000000L), active1, 0L, active2, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, unchecked((long)0x3000000000000L), active2, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x4000000010200000L), active1, unchecked((long)0x620000000000L), active2, unchecked((long)0xc00L));
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x3060000000L), active1, 0L, active2, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x1000000000000L), active1, 0L, active2, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x80000L), active1, unchecked((long)0x80000000000L), active2, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x18080004008000L), active1, unchecked((long)0x1804000002000000L), active2, 0L);
      case 74:
      case 106:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x100040000000000L), active1, 0L, active2, 0L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, unchecked((long)0x8000000000000L), active2, 0L);
      case 76:
      case 108:
         if ((active0 & unchecked((long)0x400000000000000L)) != 0L)
            return jjStopAtPos(3, 58);
         else if ((active1 & unchecked((long)0x1000000L)) != 0L)
            return jjStartNfaWithStates_0(3, 88, 9);
         else if ((active1 & unchecked((long)0x8000000000L)) != 0L)
            return jjStartNfaWithStates_0(3, 103, 9);
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, unchecked((long)0x400000020c000000L), active2, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x2080020000000000L), active1, unchecked((long)0x100000000000L), active2, 0L);
      case 78:
      case 110:
         if ((active0 & unchecked((long)0x80000000L)) != 0L)
            return jjStartNfaWithStates_0(3, 31, 9);
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x8040000400500000L), active1, unchecked((long)0x40000200001L), active2, unchecked((long)0x1L));
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, unchecked((long)0x800000L), active2, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x800000040000L), active1, unchecked((long)0x4L), active2, 0L);
      case 81:
      case 113:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x20000L), active1, 0L, active2, 0L);
      case 82:
      case 114:
         if ((active1 & unchecked((long)0x100000000000000L)) != 0L)
            return jjStartNfaWithStates_0(3, 120, 9);
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x1800400b08000000L), active1, unchecked((long)0x40000030000002L), active2, unchecked((long)0x2L));
      case 83:
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x2000000000000L), active1, unchecked((long)0x6000000000L), active2, 0L);
      case 84:
      case 116:
         if ((active1 & unchecked((long)0x10000L)) != 0L)
            return jjStartNfaWithStates_0(3, 80, 9);
         else if ((active1 & unchecked((long)0x20000L)) != 0L)
            return jjStartNfaWithStates_0(3, 81, 9);
         else if ((active1 & unchecked((long)0x10000000000000L)) != 0L)
            return jjStartNfaWithStates_0(3, 116, 9);
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x200002000000L), active1, unchecked((long)0x400000000L), active2, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, unchecked((long)0x204000000000000L), active1, 0L, active2, 0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, unchecked((long)0xa000000000000000L), active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1, active2);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(2, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1, active2);
      return 4;
   }
   switch((int)curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, unchecked((long)0xb000000000000L), active2, 0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x805020308000000L), active1, unchecked((long)0x2L), active2, unchecked((long)0x2L));
      case 67:
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x10c00000L), active1, 0L, active2, unchecked((long)0x400L));
      case 68:
      case 100:
         if ((active1 & unchecked((long)0x200000L)) != 0L)
            return jjStartNfaWithStates_0(4, 85, 9);
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x40000400200000L), active1, 0L, active2, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x23800400600c0000L), active1, unchecked((long)0x800000003c000000L), active2, unchecked((long)0x200L));
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x4000000000000000L), active1, 0L, active2, unchecked((long)0x800L));
      case 71:
      case 103:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, unchecked((long)0x2000000L), active2, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, unchecked((long)0x400000000L), active2, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x1000c03802010000L), active1, unchecked((long)0x2000080000000000L), active2, 0L);
      case 74:
      case 106:
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x2000000000000L), active1, 0L, active2, 0L);
      case 76:
      case 108:
         if ((active0 & unchecked((long)0x100000000000L)) != 0L)
            return jjStopAtPos(4, 44);
         else if ((active1 & unchecked((long)0x4000000000000L)) != 0L)
            return jjStartNfaWithStates_0(4, 114, 9);
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x14001000000L), active1, unchecked((long)0x400001000000004L), active2, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, unchecked((long)0x1800000000000000L), active2, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x20000000008000L), active1, 0L, active2, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x4000000L), active1, unchecked((long)0x100000000000L), active2, 0L);
      case 82:
      case 114:
         if ((active1 & unchecked((long)0x800000L)) != 0L)
            return jjStartNfaWithStates_0(4, 87, 9);
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x200000000000L), active1, 0L, active2, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x8008000000100000L), active1, 0L, active2, 0L);
      case 84:
      case 116:
         if ((active0 & unchecked((long)0x80000000000L)) != 0L)
            return jjStopAtPos(4, 43);
         else if ((active1 & unchecked((long)0x40000000000000L)) != 0L)
            return jjStartNfaWithStates_0(4, 118, 9);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, unchecked((long)0x666000000001L), active2, unchecked((long)0x1L));
      case 85:
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x20000L), active1, 0L, active2, 0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa5_0(active0, unchecked((long)0x10000000000000L), active1, 0L, active2, 0L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, unchecked((long)0x4000000000000000L), active2, 0L);
      case 89:
      case 121:
         if ((active1 & unchecked((long)0x200000000L)) != 0L)
            return jjStartNfaWithStates_0(4, 97, 9);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, unchecked((long)0x810000000000L), active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1, active2);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(3, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1, active2);
      return 5;
   }
   switch((int)curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x4000000000L), active1, unchecked((long)0x40000000c000000L), active2, 0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x1000000L), active1, unchecked((long)0x4002000030000004L), active2, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x100040020000000L), active1, 0L, active2, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x2000000000000000L), active1, unchecked((long)0x1000000000000L), active2, 0L);
      case 69:
      case 101:
         if ((active0 & unchecked((long)0x8000L)) != 0L)
            return jjStartNfaWithStates_0(5, 15, 9);
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x4010010000000000L), active1, unchecked((long)0x400000000L), active2, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x40220400220000L), active1, unchecked((long)0x1800620000000001L), active2, unchecked((long)0x801L));
      case 76:
      case 108:
         if ((active1 & unchecked((long)0x1000000000L)) != 0L)
            return jjStartNfaWithStates_0(5, 100, 9);
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x4000000000000L), active1, 0L, active2, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x8000000L), active1, 0L, active2, 0L);
      case 78:
      case 110:
         if ((active0 & unchecked((long)0x10000L)) != 0L)
            return jjStartNfaWithStates_0(5, 16, 9);
         else if ((active1 & unchecked((long)0x2000000L)) != 0L)
            return jjStartNfaWithStates_0(5, 89, 9);
         else if ((active1 & unchecked((long)0x80000000000L)) != 0L)
            return jjStartNfaWithStates_0(5, 107, 9);
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x200803000000000L), active1, unchecked((long)0x8000000000000000L), active2, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x12000000L), active1, unchecked((long)0x2000000000000000L), active2, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x400000000000L), active1, 0L, active2, 0L);
      case 82:
      case 114:
         if ((active0 & unchecked((long)0x80000L)) != 0L)
            return jjStartNfaWithStates_0(5, 19, 9);
         else if ((active2 & unchecked((long)0x200L)) != 0L)
            return jjStartNfaWithStates_0(5, 137, 9);
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x80000044000000L), active1, 0L, active2, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x40000L)) != 0L)
            return jjStopAtPos(5, 18);
         else if ((active1 & unchecked((long)0x2000000000L)) != 0L)
         {
            jjmatchedKind = 101;
            jjmatchedPos = 5;
         }
         else if ((active1 & unchecked((long)0x10000000000L)) != 0L)
         {
            jjmatchedKind = 104;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, unchecked((long)0x904000000000L), active2, 0L);
      case 84:
      case 116:
         if ((active2 & unchecked((long)0x400L)) != 0L)
            return jjStartNfaWithStates_0(5, 138, 9);
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x8829000300500000L), active1, unchecked((long)0x2L), active2, unchecked((long)0x2L));
      case 85:
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x2000000000000L), active1, unchecked((long)0x8040000000000L), active2, 0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x1000000800000000L), active1, 0L, active2, 0L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa6_0(active0, unchecked((long)0x800000L), active1, 0L, active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1, active2);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(4, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1, active2);
      return 6;
   }
   switch((int)curChar)
   {
      case 33:
         if ((active1 & unchecked((long)0x4000000000L)) != 0L)
            return jjStopAtPos(6, 102);
         break;
      case 45:
         return jjMoveStringLiteralDfa7_0(active0, unchecked((long)0x2000000000000000L), active1, unchecked((long)0x800000000000L), active2, 0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, unchecked((long)0x100000L), active1, unchecked((long)0x40000000000L), active2, 0L);
      case 67:
      case 99:
         if ((active0 & unchecked((long)0x200000000000L)) != 0L)
            return jjStopAtPos(6, 45);
         return jjMoveStringLiteralDfa7_0(active0, unchecked((long)0xa00000L), active1, 0L, active2, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, unchecked((long)0x8000000L), active2, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, unchecked((long)0x1008003848000000L), active1, 0L, active2, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, unchecked((long)0x2000000000000L), active2, 0L);
      case 71:
      case 103:
         if ((active0 & unchecked((long)0x800000000000L)) != 0L)
            return jjStopAtPos(6, 47);
         break;
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, unchecked((long)0x8a5000304400000L), active1, unchecked((long)0x2L), active2, unchecked((long)0x2L));
      case 76:
      case 108:
         if ((active2 & unchecked((long)0x1L)) != 0L)
            return jjStartNfaWithStates_0(6, 128, 9);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, unchecked((long)0x2000000000000000L), active2, 0L);
      case 77:
      case 109:
         if ((active0 & unchecked((long)0x10000000000L)) != 0L)
            return jjStartNfaWithStates_0(6, 40, 9);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, unchecked((long)0x620000000000L), active2, 0L);
      case 78:
      case 110:
         if ((active0 & unchecked((long)0x2000000L)) != 0L)
            return jjStopAtPos(6, 25);
         else if ((active0 & unchecked((long)0x20000000000L)) != 0L)
            return jjStopAtPos(6, 41);
         else if ((active1 & unchecked((long)0x4L)) != 0L)
            return jjStopAtPos(6, 66);
         return jjMoveStringLiteralDfa7_0(active0, unchecked((long)0x2000010000000L), active1, unchecked((long)0x8000400000001L), active2, unchecked((long)0x800L));
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, unchecked((long)0xc010000001020000L), active1, 0L, active2, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x400000000000L)) != 0L)
            return jjStopAtPos(6, 46);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, unchecked((long)0x30000000L), active2, 0L);
      case 84:
      case 116:
         if ((active0 & unchecked((long)0x20000000L)) != 0L)
            return jjStopAtPos(6, 29);
         return jjMoveStringLiteralDfa7_0(active0, unchecked((long)0x340040400000000L), active1, unchecked((long)0x8400100000000000L), active2, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, unchecked((long)0x1000004000000L), active2, 0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa7_0(active0, unchecked((long)0x4000000000L), active1, 0L, active2, 0L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, unchecked((long)0x4000000000000000L), active2, 0L);
      case 90:
      case 122:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, unchecked((long)0x1800000000000000L), active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1, active2);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(5, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1, active2);
      return 7;
   }
   switch((int)curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x100000000000000L), active1, unchecked((long)0x100400000000L), active2, 0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x8000004000200000L), active1, unchecked((long)0x2000000000000000L), active2, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x82000000000000L), active1, 0L, active2, 0L);
      case 68:
      case 100:
         if ((active0 & unchecked((long)0x800000000L)) != 0L)
         {
            jjmatchedKind = 35;
            jjmatchedPos = 7;
         }
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x1000003010000000L), active1, 0L, active2, 0L);
      case 69:
      case 101:
         if ((active1 & unchecked((long)0x10000000L)) != 0L)
            return jjStartNfaWithStates_0(7, 92, 9);
         else if ((active1 & unchecked((long)0x20000000L)) != 0L)
            return jjStartNfaWithStates_0(7, 93, 9);
         else if ((active1 & unchecked((long)0x20000000000L)) != 0L)
         {
            jjmatchedKind = 105;
            jjmatchedPos = 7;
         }
         else if ((active1 & unchecked((long)0x800000000000000L)) != 0L)
            return jjStartNfaWithStates_0(7, 123, 9);
         else if ((active1 & unchecked((long)0x1000000000000000L)) != 0L)
            return jjStartNfaWithStates_0(7, 124, 9);
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x4000000001020000L), active1, unchecked((long)0x600000000000L), active2, unchecked((long)0x800L));
      case 70:
      case 102:
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x20000000000000L), active1, 0L, active2, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x2040000400000000L), active1, unchecked((long)0x400000000000000L), active2, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x800000L), active1, unchecked((long)0x40000000000L), active2, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x8000040100000L), active1, 0L, active2, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x200400000L), active1, unchecked((long)0x8000002L), active2, unchecked((long)0x2L));
      case 80:
      case 112:
         if ((active1 & unchecked((long)0x4000000L)) != 0L)
            return jjStartNfaWithStates_0(7, 90, 9);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, unchecked((long)0x1000000000000L), active2, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x40000000000L)) != 0L)
            return jjStopAtPos(7, 42);
         else if ((active0 & unchecked((long)0x200000000000000L)) != 0L)
            return jjStopAtPos(7, 57);
         else if ((active1 & unchecked((long)0x4000000000000000L)) != 0L)
            return jjStartNfaWithStates_0(7, 126, 9);
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x10000000000000L), active1, 0L, active2, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x400000c000000L), active1, unchecked((long)0xa000000000000L), active2, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, unchecked((long)0x8000000000000001L), active2, 0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa8_0(active0, unchecked((long)0x801000100000000L), active1, 0L, active2, 0L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, unchecked((long)0x800000000000L), active2, 0L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1, active2);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(6, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1, active2);
      return 8;
   }
   switch((int)curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa9_0(active0, unchecked((long)0x1080003001000000L), active1, unchecked((long)0x600000000000L), active2, 0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa9_0(active0, unchecked((long)0x10000000000000L), active1, unchecked((long)0x8000000000000000L), active2, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, unchecked((long)0x40000000L), active1, 0L, active2, 0L);
      case 68:
      case 100:
         if ((active2 & unchecked((long)0x800L)) != 0L)
            return jjStartNfaWithStates_0(8, 139, 9);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active0, unchecked((long)0x801000108800000L), active1, unchecked((long)0x2000400000000L), active2, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa9_0(active0, unchecked((long)0x100000000000000L), active1, 0L, active2, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa9_0(active0, unchecked((long)0x8020000010000000L), active1, unchecked((long)0x9800000000000L), active2, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, unchecked((long)0x40000000000L), active2, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa9_0(active0, unchecked((long)0x20000L), active1, unchecked((long)0x400000000000000L), active2, 0L);
      case 78:
      case 110:
         if ((active0 & unchecked((long)0x200000000L)) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 8;
         }
         else if ((active2 & unchecked((long)0x2L)) != 0L)
            return jjStopAtPos(8, 129);
         return jjMoveStringLiteralDfa9_0(active0, unchecked((long)0x6000000000400000L), active1, unchecked((long)0x2L), active2, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, unchecked((long)0x40000400000000L), active1, unchecked((long)0x100000000001L), active2, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active0, unchecked((long)0x4000000000L), active1, 0L, active2, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa9_0(active0, unchecked((long)0xa000000300000L), active1, unchecked((long)0x2000000000000000L), active2, 0L);
      case 87:
      case 119:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, unchecked((long)0x8000000L), active2, 0L);
      case 89:
      case 121:
         if ((active0 & unchecked((long)0x4000000L)) != 0L)
            return jjStopAtPos(8, 26);
         else if ((active0 & unchecked((long)0x4000000000000L)) != 0L)
            return jjStopAtPos(8, 50);
         break;
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1, active2);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1, long old2, long active2)
{
   if (((active0 &= old0) | (active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_0(7, old0, old1, old2); 
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1, 0L);
      return 9;
   }
   switch((int)curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active0, unchecked((long)0x801000100800000L), active1, unchecked((long)0x2L));
      case 65:
      case 97:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, unchecked((long)0x200000000000L));
      case 66:
      case 98:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, unchecked((long)0x400000000000L));
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active0, unchecked((long)0x4000000000000000L), active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa10_0(active0, unchecked((long)0x1000000L), active1, 0L);
      case 69:
      case 101:
         if ((active0 & unchecked((long)0x40000000L)) != 0L)
            return jjStartNfaWithStates_0(9, 30, 9);
         else if ((active1 & unchecked((long)0x400000000000000L)) != 0L)
            return jjStartNfaWithStates_0(9, 122, 9);
         return jjMoveStringLiteralDfa10_0(active0, unchecked((long)0x20000000220000L), active1, unchecked((long)0x2000000000000000L));
      case 70:
      case 102:
         return jjMoveStringLiteralDfa10_0(active0, unchecked((long)0x80002000000000L), active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa10_0(active0, unchecked((long)0x200a000000000000L), active1, 0L);
      case 76:
      case 108:
         if ((active1 & unchecked((long)0x8000000000000L)) != 0L)
            return jjStartNfaWithStates_0(9, 115, 9);
         return jjMoveStringLiteralDfa10_0(active0, unchecked((long)0x110000000000000L), active1, unchecked((long)0x8000000400000000L));
      case 78:
      case 110:
         if ((active0 & unchecked((long)0x400000000L)) != 0L)
         {
            jjmatchedKind = 34;
            jjmatchedPos = 9;
         }
         else if ((active1 & unchecked((long)0x8000000L)) != 0L)
            return jjStartNfaWithStates_0(9, 91, 9);
         return jjMoveStringLiteralDfa10_0(active0, unchecked((long)0x8040000000000000L), active1, unchecked((long)0x1100000000000L));
      case 80:
      case 112:
         return jjMoveStringLiteralDfa10_0(active0, unchecked((long)0x1000001000000000L), active1, 0L);
      case 82:
      case 114:
         if ((active1 & unchecked((long)0x2000000000000L)) != 0L)
            return jjStartNfaWithStates_0(9, 113, 9);
         return jjMoveStringLiteralDfa10_0(active0, unchecked((long)0x8000000L), active1, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x100000L)) != 0L)
            return jjStopAtPos(9, 20);
         else if ((active0 & unchecked((long)0x400000L)) != 0L)
            return jjStopAtPos(9, 22);
         else if ((active0 & unchecked((long)0x4000000000L)) != 0L)
            return jjStartNfaWithStates_0(9, 38, 9);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa10_0(active0, unchecked((long)0x10000000L), active1, unchecked((long)0x800000000000L));
      case 85:
      case 117:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, unchecked((long)0x1L));
      case 89:
      case 121:
         if ((active1 & unchecked((long)0x40000000000L)) != 0L)
            return jjStartNfaWithStates_0(9, 106, 9);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(8, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, active1, 0L);
      return 10;
   }
   switch((int)curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x10000000000000L), active1, 0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x848000100000000L), active1, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x800000L), active1, unchecked((long)0x100000000000L));
      case 68:
      case 100:
         if ((active1 & unchecked((long)0x2000000000000000L)) != 0L)
            return jjStartNfaWithStates_0(10, 125, 9);
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x20000000000000L), active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x4000000001000000L), active1, unchecked((long)0x400000000000L));
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, unchecked((long)0x200000000000L));
      case 71:
      case 103:
         if ((active1 & unchecked((long)0x1000000000000L)) != 0L)
            return jjStartNfaWithStates_0(10, 112, 9);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, unchecked((long)0x800000000000L));
      case 73:
      case 105:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x10000000L), active1, unchecked((long)0x2L));
      case 76:
      case 108:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x80000000000000L), active1, unchecked((long)0x8000000000000000L));
      case 78:
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x20000L), active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x1000000000000L), active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x1000001000000000L), active1, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x200000L)) != 0L)
            return jjStopAtPos(10, 21);
         else if ((active0 & unchecked((long)0x8000000L)) != 0L)
            return jjStopAtPos(10, 27);
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, unchecked((long)0x400000001L));
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0xa000000000000000L), active1, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x100002000000000L), active1, 0L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa11_0(active0, unchecked((long)0x2000000000000L), active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(9, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, active1, 0L);
      return 11;
   }
   switch((int)curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x20000000000000L), active1, unchecked((long)0x1L));
      case 67:
      case 99:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x800000100000000L), active1, 0L);
      case 69:
      case 101:
         if ((active1 & unchecked((long)0x400000000L)) != 0L)
            return jjStartNfaWithStates_0(11, 98, 9);
         else if ((active1 & unchecked((long)0x100000000000L)) != 0L)
            return jjStartNfaWithStates_0(11, 108, 9);
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x1102001000000000L), active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x1000000L), active1, unchecked((long)0x400000000000L));
      case 72:
      case 104:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x800000L), active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x2000000000000000L), active1, unchecked((long)0x800000000000L));
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x48000000000000L), active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x2000000000L), active1, unchecked((long)0x2L));
      case 79:
      case 111:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x10000000L), active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x10000000000000L), active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x1000000000000L), active1, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x4000000000000000L)) != 0L)
            return jjStopAtPos(11, 62);
         else if ((active0 & unchecked((long)0x8000000000000000L)) != 0L)
            return jjStopAtPos(11, 63);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x20000L), active1, unchecked((long)0x200000000000L));
      case 85:
      case 117:
         return jjMoveStringLiteralDfa12_0(active0, unchecked((long)0x80000000000000L), active1, 0L);
      case 89:
      case 121:
         if ((active1 & unchecked((long)0x8000000000000000L)) != 0L)
            return jjStartNfaWithStates_0(11, 127, 9);
         break;
      default :
         break;
   }
   return jjStartNfa_0(10, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(10, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, active1, 0L);
      return 12;
   }
   switch((int)curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa13_0(active0, unchecked((long)0x4a000000000000L), active1, 0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa13_0(active0, unchecked((long)0x2000000000000000L), active1, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa13_0(active0, unchecked((long)0x2000000000L), active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa13_0(active0, unchecked((long)0x1000001000000000L), active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa13_0(active0, unchecked((long)0x81000000800000L), active1, unchecked((long)0x200000000003L));
      case 73:
      case 105:
         return jjMoveStringLiteralDfa13_0(active0, unchecked((long)0x1000000L), active1, 0L);
      case 78:
      case 110:
         if ((active0 & unchecked((long)0x10000000L)) != 0L)
            return jjStopAtPos(12, 28);
         else if ((active1 & unchecked((long)0x800000000000L)) != 0L)
            return jjStartNfaWithStates_0(12, 111, 9);
         return jjMoveStringLiteralDfa13_0(active0, unchecked((long)0x100000000000000L), active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, unchecked((long)0x400000000000L));
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active0, unchecked((long)0x20000000000000L), active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa13_0(active0, unchecked((long)0x10000000000000L), active1, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x20000L)) != 0L)
            return jjStopAtPos(12, 17);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa13_0(active0, unchecked((long)0x800000100000000L), active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(11, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, active1, 0L);
      return 13;
   }
   switch((int)curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa14_0(active0, unchecked((long)0x1000000800000L), active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa14_0(active0, unchecked((long)0x50000000000000L), active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, unchecked((long)0x1L));
      case 73:
      case 105:
         return jjMoveStringLiteralDfa14_0(active0, unchecked((long)0x1800001100000000L), active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa14_0(active0, unchecked((long)0x2000000000000000L), active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa14_0(active0, unchecked((long)0x80000001000000L), active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa14_0(active0, unchecked((long)0xa000000000000L), active1, 0L);
      case 81:
      case 113:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, unchecked((long)0x2L));
      case 82:
      case 114:
         if ((active1 & unchecked((long)0x200000000000L)) != 0L)
            return jjStartNfaWithStates_0(13, 109, 9);
         return jjMoveStringLiteralDfa14_0(active0, unchecked((long)0x20000000000000L), active1, unchecked((long)0x400000000000L));
      case 84:
      case 116:
         return jjMoveStringLiteralDfa14_0(active0, unchecked((long)0x100002000000000L), active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(12, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, active1, 0L);
      return 14;
   }
   switch((int)curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa15_0(active0, unchecked((long)0x2000000000000000L), active1, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa15_0(active0, unchecked((long)0x1010001000000000L), active1, 0L);
      case 69:
      case 101:
         if ((active1 & unchecked((long)0x400000000000L)) != 0L)
            return jjStartNfaWithStates_0(14, 110, 9);
         return jjMoveStringLiteralDfa15_0(active0, unchecked((long)0x20000001000000L), active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa15_0(active0, unchecked((long)0x40000000000000L), active1, unchecked((long)0x1L));
      case 73:
      case 105:
         return jjMoveStringLiteralDfa15_0(active0, unchecked((long)0x2000000000L), active1, 0L);
      case 75:
      case 107:
         if ((active0 & unchecked((long)0x800000L)) != 0L)
            return jjStartNfaWithStates_0(14, 23, 9);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa15_0(active0, unchecked((long)0x801000100000000L), active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa15_0(active0, unchecked((long)0xa000000000000L), active1, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x100000000000000L)) != 0L)
            return jjStopAtPos(14, 56);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa15_0(active0, unchecked((long)0x80000000000000L), active1, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa15_0(active0, 0L, active1, unchecked((long)0x2L));
      default :
         break;
   }
   return jjStartNfa_0(13, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa15_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(13, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, active1, 0L);
      return 15;
   }
   switch((int)curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa16_0(active0, unchecked((long)0x1000001000000000L), active1, unchecked((long)0x2L));
      case 67:
      case 99:
         return jjMoveStringLiteralDfa16_0(active0, unchecked((long)0x20000000000000L), active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa16_0(active0, unchecked((long)0x1000000L), active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa16_0(active0, unchecked((long)0xa000000000000L), active1, unchecked((long)0x1L));
      case 70:
      case 102:
         return jjMoveStringLiteralDfa16_0(active0, unchecked((long)0x40000000000000L), active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa16_0(active0, unchecked((long)0x2000000000000000L), active1, 0L);
      case 78:
      case 110:
         if ((active0 & unchecked((long)0x100000000L)) != 0L)
         {
            jjmatchedKind = 32;
            jjmatchedPos = 15;
         }
         return jjMoveStringLiteralDfa16_0(active0, unchecked((long)0x801000000000000L), active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa16_0(active0, unchecked((long)0x10002000000000L), active1, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x80000000000000L)) != 0L)
            return jjStopAtPos(15, 55);
         break;
      default :
         break;
   }
   return jjStartNfa_0(14, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa16_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(14, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(15, active0, active1, 0L);
      return 16;
   }
   switch((int)curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa17_0(active0, unchecked((long)0x1000000L), active1, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa17_0(active0, unchecked((long)0xa000000000000L), active1, unchecked((long)0x1L));
      case 68:
      case 100:
         return jjMoveStringLiteralDfa17_0(active0, unchecked((long)0x1000000000000L), active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active0, unchecked((long)0x40000000000000L), active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa17_0(active0, unchecked((long)0x2000000000000000L), active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa17_0(active0, 0L, active1, unchecked((long)0x2L));
      case 78:
      case 110:
         if ((active0 & unchecked((long)0x2000000000L)) != 0L)
            return jjStopAtPos(16, 37);
         return jjMoveStringLiteralDfa17_0(active0, unchecked((long)0x10000000000000L), active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa17_0(active0, unchecked((long)0x20000000000000L), active1, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x800000000000000L)) != 0L)
            return jjStopAtPos(16, 59);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa17_0(active0, unchecked((long)0x1000001000000000L), active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(15, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa17_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(15, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(16, active0, active1, 0L);
      return 17;
   }
   switch((int)curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa18_0(active0, unchecked((long)0x40000000000000L), active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa18_0(active0, unchecked((long)0x10000000000000L), active1, 0L);
      case 69:
      case 101:
         if ((active0 & unchecked((long)0x1000000000L)) != 0L)
            return jjStopAtPos(17, 36);
         return jjMoveStringLiteralDfa18_0(active0, unchecked((long)0x1000000000000000L), active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa18_0(active0, unchecked((long)0x1000000000000L), active1, unchecked((long)0x2L));
      case 78:
      case 110:
         return jjMoveStringLiteralDfa18_0(active0, unchecked((long)0x20000000000000L), active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa18_0(active0, unchecked((long)0xa000000000000L), active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa18_0(active0, unchecked((long)0x1000000L), active1, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa18_0(active0, unchecked((long)0x2000000000000000L), active1, unchecked((long)0x1L));
      default :
         break;
   }
   return jjStartNfa_0(16, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa18_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(16, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(17, active0, active1, 0L);
      return 18;
   }
   switch((int)curChar)
   {
      case 68:
      case 100:
         return jjMoveStringLiteralDfa19_0(active0, unchecked((long)0x20000000000000L), active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa19_0(active0, unchecked((long)0x2000000000000000L), active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa19_0(active0, unchecked((long)0x10000000000000L), active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa19_0(active0, unchecked((long)0xa000000000000L), active1, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x1000000000000000L)) != 0L)
            return jjStopAtPos(18, 60);
         else if ((active1 & unchecked((long)0x1L)) != 0L)
            return jjStopAtPos(18, 64);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa19_0(active0, unchecked((long)0x41000000000000L), active1, unchecked((long)0x2L));
      case 89:
      case 121:
         return jjMoveStringLiteralDfa19_0(active0, unchecked((long)0x1000000L), active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(17, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa19_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(17, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(18, active0, active1, 0L);
      return 19;
   }
   switch((int)curChar)
   {
      case 68:
      case 100:
         return jjMoveStringLiteralDfa20_0(active0, unchecked((long)0xa000000000000L), active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa20_0(active0, unchecked((long)0x21000000000000L), active1, unchecked((long)0x2L));
      case 77:
      case 109:
         return jjMoveStringLiteralDfa20_0(active0, unchecked((long)0x1000000L), active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa20_0(active0, unchecked((long)0x2000000000000000L), active1, 0L);
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x40000000000000L)) != 0L)
            return jjStopAtPos(19, 54);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa20_0(active0, unchecked((long)0x10000000000000L), active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(18, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa20_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(18, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(19, active0, active1, 0L);
      return 20;
   }
   switch((int)curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa21_0(active0, unchecked((long)0x2000000000000000L), active1, 0L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa21_0(active0, unchecked((long)0x1000000L), active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa21_0(active0, 0L, active1, unchecked((long)0x2L));
      case 73:
      case 105:
         return jjMoveStringLiteralDfa21_0(active0, unchecked((long)0x1a000000000000L), active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa21_0(active0, unchecked((long)0x1000000000000L), active1, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa21_0(active0, unchecked((long)0x20000000000000L), active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(19, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa21_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(19, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(20, active0, active1, 0L);
      return 21;
   }
   switch((int)curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa22_0(active0, unchecked((long)0x20000000000000L), active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa22_0(active0, unchecked((long)0x2000000000000000L), active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa22_0(active0, unchecked((long)0x1000000000000L), active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa22_0(active0, unchecked((long)0x10000001000000L), active1, 0L);
      case 83:
      case 115:
         if ((active1 & unchecked((long)0x2L)) != 0L)
            return jjStopAtPos(21, 65);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa22_0(active0, unchecked((long)0xa000000000000L), active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(20, active0, active1, 0L);
}
private int jjMoveStringLiteralDfa22_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(20, old0, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(21, active0, 0L, 0L);
      return 22;
   }
   switch((int)curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa23_0(active0, unchecked((long)0xa000000000000L));
      case 76:
      case 108:
         return jjMoveStringLiteralDfa23_0(active0, unchecked((long)0x1000000L));
      case 78:
      case 110:
         return jjMoveStringLiteralDfa23_0(active0, unchecked((long)0x10000000000000L));
      case 79:
      case 111:
         return jjMoveStringLiteralDfa23_0(active0, unchecked((long)0x20000000000000L));
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x1000000000000L)) != 0L)
            return jjStopAtPos(22, 48);
         else if ((active0 & unchecked((long)0x2000000000000000L)) != 0L)
            return jjStopAtPos(22, 61);
         break;
      default :
         break;
   }
   return jjStartNfa_0(21, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa23_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(21, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(22, active0, 0L, 0L);
      return 23;
   }
   switch((int)curChar)
   {
      case 78:
      case 110:
         return jjMoveStringLiteralDfa24_0(active0, unchecked((long)0x20000000000000L));
      case 79:
      case 111:
         return jjMoveStringLiteralDfa24_0(active0, unchecked((long)0xa000000000000L));
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x1000000L)) != 0L)
            return jjStopAtPos(23, 24);
         else if ((active0 & unchecked((long)0x10000000000000L)) != 0L)
            return jjStopAtPos(23, 52);
         break;
      default :
         break;
   }
   return jjStartNfa_0(22, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa24_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(22, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(23, active0, 0L, 0L);
      return 24;
   }
   switch((int)curChar)
   {
      case 78:
      case 110:
         return jjMoveStringLiteralDfa25_0(active0, unchecked((long)0xa000000000000L));
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x20000000000000L)) != 0L)
            return jjStopAtPos(24, 53);
         break;
      default :
         break;
   }
   return jjStartNfa_0(23, active0, 0L, 0L);
}
private int jjMoveStringLiteralDfa25_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(23, old0, 0L, 0L);
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      jjStopStringLiteralDfa_0(24, active0, 0L, 0L);
      return 25;
   }
   switch((int)curChar)
   {
      case 83:
      case 115:
         if ((active0 & unchecked((long)0x2000000000000L)) != 0L)
            return jjStopAtPos(25, 49);
         else if ((active0 & unchecked((long)0x8000000000000L)) != 0L)
            return jjStopAtPos(25, 51);
         break;
      default :
         break;
   }
   return jjStartNfa_0(24, active0, 0L, 0L);
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static ulong[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 10;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         ulong l = 1UL << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 10:
                  if ((0x3ff200800000000L & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     jjCheckNAdd(9);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 72)
                        kind = 72;
                     jjCheckNAddTwoStates(5, 6);
                  }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 72)
                        kind = 72;
                     jjCheckNAddTwoStates(5, 6);
                  }
                  else if ((0x200800000000L & l) != 0L)
                  {
                     if (kind > 140)
                        kind = 140;
                     jjCheckNAdd(9);
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 2;
                  if (curChar == 45)
                     jjCheckNAdd(5);
                  break;
               case 0:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if ((0xffff7fffffffffffL & l) != 0L && kind > 7)
                     kind = 7;
                  break;
               case 2:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 4:
                  if (curChar == 45)
                     jjCheckNAdd(5);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAddTwoStates(5, 6);
                  break;
               case 6:
                  if (curChar != 46)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAdd(7);
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjCheckNAdd(7);
                  break;
               case 8:
                  if ((0x200800000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  jjCheckNAdd(9);
                  break;
               case 9:
                  if ((0x3ff200800000000L & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  jjCheckNAdd(9);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         ulong l = 1UL << (curChar & 0x3F);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 10:
               case 9:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  jjCheckNAdd(9);
                  break;
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  jjCheckNAdd(9);
                  break;
               case 1:
                  if (kind > 7)
                     kind = 7;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         ulong l2 = 1UL << (curChar & 0x3F);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 7)
                     kind = 7;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 10 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(System.IO.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_3()
{
   switch((int)curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_3(unchecked((long)0x800L));
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_3(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      return 1;
   }
   switch((int)curChar)
   {
      case 47:
         if ((active0 & unchecked((long)0x800L)) != 0L)
            return jjStopAtPos(1, 11);
         break;
      default :
         return 2;
   }
   return 2;
}
private int jjMoveStringLiteralDfa0_1()
{
   return jjMoveNfa_1(0, 0);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 3;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         ulong l = 1UL << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 10 && kind > 9)
                     kind = 9;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         ulong l = 1UL << (curChar & 0x3F);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         ulong l2 = 1UL << (curChar & 0x3F);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(System.IO.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2()
{
   switch((int)curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_2(unchecked((long)0x400L));
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_2(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(System.IO.IOException e) {
      return 1;
   }
   switch((int)curChar)
   {
      case 47:
         if ((active0 & unchecked((long)0x400L)) != 0L)
            return jjStopAtPos(1, 10);
         break;
      default :
         return 2;
   }
   return 2;
}
static int[] jjnextStates = {
};
public static string[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
"\u0028", "\u0029", null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, 
"\u003a\u003d", null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
"\u003e", "\u003c", "\u003e\u003d", "\u003c\u003d", "\u003d", null, "\u002a", "\u002f", 
"\u002b", "\u002d", null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, "\u005b", "\u005d", "\u003a", "\u002c", null, null, null, null, 
null, null, "\u003f", };
public static string[] lexStateNames = {
   "DEFAULT", 
   "IN_SINGLE_LINE_COMMENT", 
   "IN_FORMAL_COMMENT", 
   "IN_MULTI_LINE_COMMENT", 
};
public static int[] jjnewLexState = {
   -1, -1, -1, -1, -1, 1, 1, 2, 3, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static long[] jjtoToken = {
   unchecked((long)0xffffffffffffe001L), unchecked((long)0xffffffffffffffffL), unchecked((long)0x9fffL), 
};
static long[] jjtoSkip = {
   unchecked((long)0xe1eL), unchecked((long)0x0L), unchecked((long)0x0L), 
};
static long[] jjtoSpecial = {
   unchecked((long)0xe00L), unchecked((long)0x0L), unchecked((long)0x0L), 
};
static long[] jjtoMore = {
   unchecked((long)0x11e0L), unchecked((long)0x0L), unchecked((long)0x0L), 
};
protected SimpleCharStream input_stream;
private long[] jjrounds = new long[10];
private int[] jjstateSet = new int[20];
StringBuilder image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public LexerTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Exception("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public LexerTokenManager(SimpleCharStream stream, int lexState) : this(stream){
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 10; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 4 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   string im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
long jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;){
   try{     
      curChar = input_stream.BeginToken();
   }catch(System.IO.IOException e){
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   for (;;){
     switch(curLexState){
       case 0:
         try { input_stream.backup(0);
            while (curChar <= 32 && (unchecked((long)0x100002600L) & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (System.IO.IOException e1) { goto EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 12)
         {
            jjmatchedKind = 12;
         }
         break;
       case 2:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         if (jjmatchedPos == 0 && jjmatchedKind > 12)
         {
            jjmatchedKind = 12;
         }
         break;
       case 3:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         if (jjmatchedPos == 0 && jjmatchedKind > 12)
         {
            jjmatchedKind = 12;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff){
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if (((ulong)jjtoToken[jjmatchedKind >> 6] & (1UL << (jjmatchedKind & 0x3F))) != 0){
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 0x3F))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 0x3F))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else 
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           goto EOFLoop;
        }
        MoreLexicalActions();
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (System.IO.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     string error_after = null;
     bool EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (System.IO.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      case 7 :
         if (image == null)
            image = new StringBuilder();
         image.Append(input_stream.GetSuffix(jjimageLen));
         jjimageLen = 0;
                         input_stream.backup(1);
         break;
      default : 
         break;
   }
}
}
} 
